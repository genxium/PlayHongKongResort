# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Global
GET	 /	controllers.Application.index(dev: Integer ?=0, theme: String ?="main")
GET	 /admin	controllers.Application.admin()
GET	/wstest controllers.Application.wstest()

# Account System
POST /user/login controllers.UserController.login()
POST /user/register controllers.UserController.register()
GET /user/foreign/login controllers.ForeignPartyController.login()

GET /user/status controllers.UserController.status(token: String ?=null)
GET /user/name/duplicate controllers.UserController.duplicate(name: String ?=null)
POST /user/logout controllers.UserController.logout()

GET /user/password/index controllers.PasswordController.index()
GET /user/password/request controllers.PasswordController.request(email: String ?=null)
GET /user/password/reset controllers.PasswordController.reset()
POST /user/password/confirm controllers.PasswordController.confirm()

GET /user/email controllers.EmailController.index()
GET /user/email/verify controllers.EmailController.verify(email: String ?=null, code: String ?=null)
GET /user/email/duplicate controllers.EmailController.duplicate(email: String ?=null)
POST /user/email/resend controllers.EmailController.resend()

# Home Page

POST /activity/delete controllers.ActivityController.delete()
POST /activity/join controllers.ActivityController.join()
POST /activity/save controllers.ActivityController.save()
POST /activity/submit controllers.ActivityController.submit()
GET /activity/list controllers.ActivityController.list(page_st: Integer ?=null, page_ed: Integer ?=null, num_items: Integer ?=null, order_key: String ?=null, orientation: Integer ?=null, token: String ?= null, viewee_id: Long ?=0, relation: Integer ?=null, status: Integer ?=null)
GET /activity/detail controllers.ActivityController.detail(activity_id: Long ?=0, token: String ?=null)
PUT /activity/mark controllers.ActivityController.mark()

# Profile
GET /user/detail controllers.UserController.detail(viewee_id: Long ?=0, token : String ?=null)

POST /user/save controllers.UserController.save()

# Admin
POST /admin/accept controllers.AdminController.accept()
POST /admin/reject controllers.AdminController.reject()
POST /admin/delete controllers.AdminController.delete()
POST /admin/prioritize controllers.AdminController.prioritize()

# Activity Detail
POST /activity/participants/update controllers.ParticipantController.update()

# Comment
POST /comment/submit controllers.CommentController.submit()
GET /comment/list controllers.CommentController.list(activity_id: Long ?=0, page_st: Integer ?=null, page_ed: Integer ?=null, num_items: Integer ?=null)
GET /comment/single/query controllers.CommentController.querySingle(comment_id: Integer ?=null)
POST /comment/sub/submit controllers.SubCommentController.submit()
GET /comment/sub/list controllers.SubCommentController.list(parent_id: Long ?=0, page_st: Integer ?=null, page_ed: Integer ?=null, num_items: Integer ?=null)

# Assessment
POST /assessment/submit controllers.AssessmentController.submit()
GET /assessment/query controllers.AssessmentController.query(ref_index: String ?=null, num_items: Integer ?=null, direction: Integer ?=null, token: String ?=null, to: Long ?=0, activity_id: Long ?=0)
GET /assessment/list controllers.AssessmentController.list(to: Long ?=0, page_st: Integer ?=null, page_ed: Integer ?=null, num_items: Integer ?=null, token: String ?=null)

# Notification
GET /notification/count controllers.NotificationController.count(token: String ?=null, is_read: Integer ?=0)
GET /notification/list controllers.NotificationController.list(page_st: Integer ?=null, page_ed: Integer ?=null, num_items: Integer ?=null, orientation: Integer ?=null, token: String ?=null, is_read: Integer ?=null)
POST /notification/delete controllers.NotificationController.delete()

# Captcha
GET /captcha controllers.Application.captcha(sid: String ?=null)

# Play websocket test
GET /ws controllers.Websocket.connect(token: String ?=null)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)
